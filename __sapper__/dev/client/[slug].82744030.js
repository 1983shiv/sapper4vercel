import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, b as space, p as create_component, e as element, B as query_selector_all, g as detach_dev, h as claim_space, q as claim_component, c as claim_element, f as children, k as attr_dev, l as add_location, m as insert_dev, r as mount_component, n as append_dev, u as transition_in, w as transition_out, x as destroy_component } from './client.1a718f00.js';
import { e as findByTag } from './Tags.e9ae6626.js';
import { B as Bloghero, P as PostList, S as Sidebar } from './Bloghero.9e73bd39.js';

/* src\routes\tag\[slug].svelte generated by Svelte v3.29.4 */
const file = "src\\routes\\tag\\[slug].svelte";

function create_fragment(ctx) {
	let title_value;
	let t0;
	let bloghero;
	let t1;
	let section;
	let div2;
	let div0;
	let postlist;
	let t2;
	let div1;
	let sidebar;
	let current;
	document.title = title_value = "Latest Articles for " + /*slug*/ ctx[0];

	bloghero = new Bloghero({
			props: {
				title1: "Latest Articles for ",
				title2: /*slug*/ ctx[0]
			},
			$$inline: true
		});

	postlist = new PostList({
			props: { posts: /*posts*/ ctx[1] },
			$$inline: true
		});

	sidebar = new Sidebar({ $$inline: true });

	const block = {
		c: function create() {
			t0 = space();
			create_component(bloghero.$$.fragment);
			t1 = space();
			section = element("section");
			div2 = element("div");
			div0 = element("div");
			create_component(postlist.$$.fragment);
			t2 = space();
			div1 = element("div");
			create_component(sidebar.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1otp67r\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			claim_component(bloghero.$$.fragment, nodes);
			t1 = claim_space(nodes);
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			div2 = claim_element(section_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			claim_component(postlist.$$.fragment, div0_nodes);
			div0_nodes.forEach(detach_dev);
			t2 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			claim_component(sidebar.$$.fragment, div1_nodes);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "container my-1 px-1 w-full overflow-hidden sm:my-2 sm:px-2 sm:w-full md:my-2 md:px-2 md:w-2/3 lg:my-2 lg:px-2 lg:w-2/3 xl:my-2 xl:px-2 xl:w-2/3");
			add_location(div0, file, 26, 4, 757);
			attr_dev(div1, "class", "container my-6 px-6 w-full overflow-hidden sm:my-8 sm:px-8 sm:w-full md:my-2 md:px-2 md:w-1/3 lg:my-2 lg:px-2 lg:w-1/3 xl:my-2 xl:px-2 xl:w-1/3");
			add_location(div1, file, 31, 4, 973);
			attr_dev(div2, "class", "flex flex-wrap mx-1 overflow-hidden sm:-mx-2 md:-mx-2 lg:-mx-2 xl:-mx-2");
			add_location(div2, file, 23, 2, 657);
			attr_dev(section, "class", "text-gray-600 body-font relative mb-4");
			add_location(section, file, 22, 0, 598);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			mount_component(bloghero, target, anchor);
			insert_dev(target, t1, anchor);
			insert_dev(target, section, anchor);
			append_dev(section, div2);
			append_dev(div2, div0);
			mount_component(postlist, div0, null);
			append_dev(div2, t2);
			append_dev(div2, div1);
			mount_component(sidebar, div1, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if ((!current || dirty & /*slug*/ 1) && title_value !== (title_value = "Latest Articles for " + /*slug*/ ctx[0])) {
				document.title = title_value;
			}

			const bloghero_changes = {};
			if (dirty & /*slug*/ 1) bloghero_changes.title2 = /*slug*/ ctx[0];
			bloghero.$set(bloghero_changes);
			const postlist_changes = {};
			if (dirty & /*posts*/ 2) postlist_changes.posts = /*posts*/ ctx[1];
			postlist.$set(postlist_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(bloghero.$$.fragment, local);
			transition_in(postlist.$$.fragment, local);
			transition_in(sidebar.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(bloghero.$$.fragment, local);
			transition_out(postlist.$$.fragment, local);
			transition_out(sidebar.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			destroy_component(bloghero, detaching);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(section);
			destroy_component(postlist);
			destroy_component(sidebar);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function preload(page) {
	const { slug } = page.params;
	const posts = findByTag(slug);
	return { slug, posts };
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("U5Bslugu5D", slots, []);
	let { slug } = $$props, { posts } = $$props;
	const writable_props = ["slug", "posts"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<U5Bslugu5D> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("slug" in $$props) $$invalidate(0, slug = $$props.slug);
		if ("posts" in $$props) $$invalidate(1, posts = $$props.posts);
	};

	$$self.$capture_state = () => ({
		findByTag,
		preload,
		PostList,
		Sidebar,
		Bloghero,
		slug,
		posts
	});

	$$self.$inject_state = $$props => {
		if ("slug" in $$props) $$invalidate(0, slug = $$props.slug);
		if ("posts" in $$props) $$invalidate(1, posts = $$props.posts);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [slug, posts];
}

class U5Bslugu5D extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { slug: 0, posts: 1 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "U5Bslugu5D",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*slug*/ ctx[0] === undefined && !("slug" in props)) {
			console.warn("<U5Bslugu5D> was created without expected prop 'slug'");
		}

		if (/*posts*/ ctx[1] === undefined && !("posts" in props)) {
			console.warn("<U5Bslugu5D> was created without expected prop 'posts'");
		}
	}

	get slug() {
		throw new Error("<U5Bslugu5D>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set slug(value) {
		throw new Error("<U5Bslugu5D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get posts() {
		throw new Error("<U5Bslugu5D>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set posts(value) {
		throw new Error("<U5Bslugu5D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default U5Bslugu5D;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiW3NsdWddLjgyNzQ0MDMwLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcm91dGVzL3RhZy9bc2x1Z10uc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQgY29udGV4dD1cIm1vZHVsZVwiPlxyXG4gIGltcG9ydCB7IGZpbmRCeVRhZyB9IGZyb20gXCIuLi8uLi9wb3N0cy5qc1wiO1xyXG5cclxuICBleHBvcnQgZnVuY3Rpb24gcHJlbG9hZChwYWdlKSB7XHJcbiAgICBjb25zdCB7IHNsdWcgfSA9IHBhZ2UucGFyYW1zO1xyXG4gICAgY29uc3QgcG9zdHMgPSBmaW5kQnlUYWcoc2x1Zyk7XHJcblxyXG4gICAgcmV0dXJuIHsgc2x1ZywgcG9zdHMgfTtcclxuICB9XHJcbjwvc2NyaXB0PlxyXG5cclxuPHNjcmlwdD5cclxuICBpbXBvcnQgUG9zdExpc3QgZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvYmxvZy9Qb3N0TGlzdC5zdmVsdGVcIjtcclxuICBpbXBvcnQgU2lkZWJhciBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9TaWRlYmFyLnN2ZWx0ZVwiO1xyXG4gIGltcG9ydCBCbG9naGVybyBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9CbG9naGVyby5zdmVsdGVcIjtcclxuICBleHBvcnQgbGV0IHNsdWcsIHBvc3RzO1xyXG48L3NjcmlwdD5cclxuXHJcbjxzdmVsdGU6aGVhZD5cclxuICA8dGl0bGU+TGF0ZXN0IEFydGljbGVzIGZvciB7c2x1Z308L3RpdGxlPlxyXG48L3N2ZWx0ZTpoZWFkPlxyXG48QmxvZ2hlcm8gdGl0bGUxPVwiTGF0ZXN0IEFydGljbGVzIGZvciBcIiB0aXRsZTI9e3NsdWd9IC8+XHJcbjxzZWN0aW9uIGNsYXNzPVwidGV4dC1ncmF5LTYwMCBib2R5LWZvbnQgcmVsYXRpdmUgbWItNFwiPlxyXG4gIDxkaXZcclxuICAgIGNsYXNzPVwiZmxleCBmbGV4LXdyYXAgbXgtMSBvdmVyZmxvdy1oaWRkZW4gc206LW14LTIgbWQ6LW14LTIgbGc6LW14LTIgeGw6LW14LTJcIlxyXG4gID5cclxuICAgIDxkaXZcclxuICAgICAgY2xhc3M9XCJjb250YWluZXIgbXktMSBweC0xIHctZnVsbCBvdmVyZmxvdy1oaWRkZW4gc206bXktMiBzbTpweC0yIHNtOnctZnVsbCBtZDpteS0yIG1kOnB4LTIgbWQ6dy0yLzMgbGc6bXktMiBsZzpweC0yIGxnOnctMi8zIHhsOm15LTIgeGw6cHgtMiB4bDp3LTIvM1wiXHJcbiAgICA+XHJcbiAgICAgIDxQb3N0TGlzdCB7cG9zdHN9IC8+XHJcbiAgICA8L2Rpdj5cclxuICAgIDxkaXZcclxuICAgICAgY2xhc3M9XCJjb250YWluZXIgbXktNiBweC02IHctZnVsbCBvdmVyZmxvdy1oaWRkZW4gc206bXktOCBzbTpweC04IHNtOnctZnVsbCBtZDpteS0yIG1kOnB4LTIgbWQ6dy0xLzMgbGc6bXktMiBsZzpweC0yIGxnOnctMS8zIHhsOm15LTIgeGw6cHgtMiB4bDp3LTEvM1wiXHJcbiAgICA+XHJcbiAgICAgIDxTaWRlYmFyIC8+XHJcbiAgICA8L2Rpdj5cclxuICA8L2Rpdj5cclxuPC9zZWN0aW9uPlxyXG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7a0VBbUI4QixHQUFJOzs7OztxQkFFYyxHQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzRHQUZ0QixHQUFJOzs7Ozs4REFFYyxHQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1NBbEJsQyxPQUFPLENBQUMsSUFBSTtTQUNsQixJQUFJLEtBQUssSUFBSSxDQUFDLE1BQU07T0FDdEIsS0FBSyxHQUFHLFNBQVMsQ0FBQyxJQUFJO1VBRW5CLElBQUksRUFBRSxLQUFLOzs7Ozs7T0FRWCxJQUFJLGdCQUFFLEtBQUs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
